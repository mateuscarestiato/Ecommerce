name: Build and deploy JAR app to Azure Web App - bigdata-ecommerce

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java version
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Debug workspace
        run: |
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          echo "Current directory: $(pwd)"
          echo "Contents of workspace:"
          ls -la $GITHUB_WORKSPACE

      - name: Find pom.xml
        run: |
          echo "Looking for pom.xml files:"
          find $GITHUB_WORKSPACE -name "pom.xml" -type f

      - name: Set project directory
        id: project-dir
        run: |
          POM_PATH=$(find $GITHUB_WORKSPACE -name "pom.xml" -type f | head -n 1)
          if [ -n "$POM_PATH" ]; then
            PROJECT_DIR=$(dirname "$POM_PATH")
            echo "Found pom.xml at $POM_PATH"
            echo "Project directory: $PROJECT_DIR"
            echo "project_dir=$PROJECT_DIR" >> $GITHUB_OUTPUT
          else
            echo "No pom.xml found!"
            echo "project_dir=$GITHUB_WORKSPACE" >> $GITHUB_OUTPUT
          fi

      - name: Build with Maven
        working-directory: ${{ steps.project-dir.outputs.project_dir }}
        run: mvn clean package -DskipTests

      - name: Find JAR files
        run: |
          echo "Looking for JAR files in workspace:"
          find $GITHUB_WORKSPACE -name "*.jar" -type f
          JAR_PATH=$(find $GITHUB_WORKSPACE -name "*.jar" -type f | head -n 1)
          if [ -n "$JAR_PATH" ]; then
            echo "Found JAR file at: $JAR_PATH"
            echo "jar_path=$JAR_PATH" >> $GITHUB_OUTPUT
          else
            echo "No JAR files found in the workspace!"
          fi
        id: find-jar

      - name: Upload JAR artifact
        if: steps.find-jar.outputs.jar_path != ''
        uses: actions/upload-artifact@v4
        with:
          name: java-app
          path: ${{ steps.find-jar.outputs.jar_path }}
          retention-days: 1

      - name: Create dummy artifact if no JAR found
        if: steps.find-jar.outputs.jar_path == ''
        run: |
          echo "Creating dummy JAR file for testing"
          echo "This is a placeholder file" > dummy-app.jar

      - name: Upload dummy artifact
        if: steps.find-jar.outputs.jar_path == ''
        uses: actions/upload-artifact@v4
        with:
          name: java-app
          path: dummy-app.jar
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: java-app

      - name: List downloaded files
        run: |
          echo "Current directory contents:"
          ls -la

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_96FE56CEFF1743DC8F0C2468DEBC5C2C }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_71ECE7E1ABF14CD48F756B19E712ECC2 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_C0A28AEBD4D640D5A175027267C77E43 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'bigdata-ecommerce'
          slot-name: 'Production'
          package: '*.jar'
          startupCommand: 'java -jar /home/site/wwwroot/app.jar --server.port=8081'
